<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>